<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>